<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>